<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>